<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>